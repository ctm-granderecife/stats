name: Update GitHub Stats

on:
  schedule:
    - cron: "0 0 * * 1" # Executa toda segunda-feira às 00:00 (UTC)
  push:
    branches:
      - main # Executa quando há push no branch principal

# Definir permissões para o token GITHUB_TOKEN
permissions:
  contents: write # Necessário para fazer push no repositório

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Check out o código
      - name: Check out repository
        uses: actions/checkout@v2

      # Passo 2: Configurar o Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      # Passo 3: Instalar dependências (requests e dotenv)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv

      # Passo 4: Adicionar o arquivo .env com o token (secret no GitHub)
      # Usamos REPO_TOKEN que deve ser configurado como um PAT com permissões para ler todos os repositórios
      - name: Set up .env with GitHub Token
        run: echo "GITHUB_TOKEN=${{ secrets.REPO_TOKEN }}" >> .env
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}

      # Passo 5: Executar o script Python para atualizar as estatísticas
      - name: Run script to update stats
        run: python update_stats.py

      # Passo 6: Commit e push das alterações
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add stats_data.json
          # Adiciona index.html apenas se for um arquivo novo
          git ls-files --error-unmatch index.html > /dev/null 2>&1 || git add index.html
          git commit -m "Atualizar estatísticas" || echo "Nada para commitar"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/ctm-granderecife/stats.git HEAD:main
